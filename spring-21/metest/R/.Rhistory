#######################
# Muestras aleatorias #
#######################
# 1 Poblaci?n finita
library(mlbench)
data(PimaIndiansDiabetes2)
BD <- PimaIndiansDiabetes2
dim(BD)
head(BD)
N <- nrow(BD) # tamaño de la población
n <- 20 # tamaño de la muestra
id <- sample.int(N, n, replace = TRUE) #población finita: muestreo aleatorio simple con reemplazo
BD[id, ]
##################
# Media muestral #
##################
x <- as.numeric(na.omit(BD$mass))
length(x)
n <- 10
mean(x)
k <- 10000
X_bar <- rep(NA, k)
for (i in 1:k) {
X_bar[i] <- mean(sample(x, n, replace = TRUE))
}
help(sample)
# mu
mean(x)
# E(X_bar)
mean(X_bar)
# sigma^2/n
var(x)/n
# Var(X_bar)
var(X_bar)
#        Pero adem?s tambi?n tenemos la      #
# Aprox - Distribuci?n de muestreo de X_bar  #
summary(X_bar)
a <- 24
b <- 42
d <- 2000
hist(X_bar, border = "white", xlim = c(a, b),
axes = FALSE)
axis(1, seq(a, b, by = 2))
axis(2, seq(0, d, by = d/10), las = 2)
abline(v = quantile(X_bar, probs = c(0.025, 0.975)), col = "red", lwd = 2)
help(omit)
help("na.omit")
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
DF
na.omit(DF)
BD$mass
length(BD$mass)
length(na.omit(BD$mass))
n <- 300
for (i in 1:k) {
X_bar[i] <- mean(sample(x, n, replace = TRUE))
}
mean(x)
# E(X_bar)
mean(X_bar)
n <- 10
for (i in 1:k) {
X_bar[i] <- mean(sample(x, n, replace = TRUE))
}
mu
mean(x)
# E(X_bar)
mean(X_bar)
# mu
mean(x)
# E(X_bar)
mean(X_bar)
# mu
mean(x)
# E(X_bar)
mean(X_bar)
x-X_bar
# mu
mean(x)
# E(X_bar)
mean(X_bar)
diff <- mean(x) - mean(X_bar)
diff
diff <- abs(mean(x) - mean(X_bar))
diff
x <- as.numeric(na.omit(BD$mass))
length(x)
k <- 10000
X_bar <- rep(NA, k)
n <- 300
for (i in 1:k) {
X_bar[i] <- mean(sample(x, n, replace = TRUE))
}
# mu
mean(x)
# E(X_bar)
mean(X_bar)
diff <- abs(mean(x) - mean(X_bar))
diff
#        Pero adem?s tambi?n tenemos la      #
# Aprox - Distribuci?n de muestreo de X_bar  #
summary(X_bar)
hist(X_bar, border = "white", xlim = c(a, b),
axes = FALSE)
hist(X_bar, border = "white", xlim = c(a, b),
axes = FALSE)
axis(1, seq(a, b, by = 2))
axis(2, seq(0, d, by = d/10), las = 2)
abline(v = quantile(X_bar, probs = c(0.025, 0.975)), col = "red", lwd = 2)
summary(X_bar)
a <- 24
b <- 42
d <- 2000
hist(X_bar, border = "white", xlim = c(a, b),
axes = FALSE)
axis(1, seq(a, b, by = 2))
axis(2, seq(0, d, by = d/10), las = 2)
abline(v = quantile(X_bar, probs = c(0.025, 0.975)), col = "red", lwd = 2)
# Definimos un directorio de trabajo
setwd("/home/nestor/Desktop/iimas-data-science/2021-2/metest/R")
# librerias necesarias
library(data.table)
library(ggplot2)
####################
# Leemos los datos #
####################
tt <- system.time(BD <- as.data.frame(fread("sisver_public.csv",
showProgress = TRUE,
sep = ",", header = TRUE,
na.strings= "")))[3]
####################
# Leemos los datos #
####################
tt <- system.time(BD <- as.data.frame(fread("sisver_public.csv",
showProgress = TRUE,
sep = ",", header = TRUE,
na.strings= "")))[3]
tt/60
# Tamaño
print(object.size(BD),units="Gb")
# Filtro
BD1 <- BD[BD$entresi == "CIUDAD DE MEXICO" & BD$resdefin == "SARS-CoV-2", ]
BD1$fecdef
BD1$HOSP <- 1*(BD1$tipacien == "HOSPITALIZADO")
BD1$DEF <- 1*!is.na(BD1$fecdef)
table(BD1$tipacien)
summary(BD1$tipacien)
summaries(BD1$tipacien)
tb1 <- table(BD1$DEF)
tb2 <- table(BD1$HOSP)
round(100*tb1/sum(tb1), 1)
round(100*tb2/sum(tb2), 1)

xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
al <- 0.1
be <- 2
n <- 30    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
al <- 0.1
be <- 2
n <- 40    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
al <- 0.1
be <- 2
n <- 40    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
al <- 0.1
be <- 2
n <- 40    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
al <- 0.1
be <- 2
n <- 100    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
al <- 0.1
be <- 2
n <- 100    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
al <- 0.1
be <- 2
n <- 100    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
al <- 0.1
be <- 2
n <- 100    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- 0#min(x_bar)*0.99
al <- 0.1
be <- 2
n <- 100    # tamaño de muestra
m <- 10000 # simulaciones
ex <- al/be
sv <- sqrt(al/(be*be*n))
xx <- seq(0, 1, length.out = 1000)
yy <- dgamma(xx, al, be)
plot(xx, yy, type = "l", lwd = 2)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rgamma(n, al, be))
}
# Si X ~ Gamma(a, b) , E(X) = a/b y Var(X) = a/b^2
a <- 0#min(x_bar)*0.99
b <- max(x_bar)*1.01
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
abline(v = 0, lwd = 2, lty = 2, col = "blue")
box(lwd = 2)
m <- 10000
n <- 2
mu <- 0
sigma <- 1
ex <- 0
sv <- sqrt(1/n)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rnorm(n, mu, sigma))
}
a <- min(x_bar) - 0.1
b <- max(x_bar) + 0.1
hist(x_bar, main = "", border = "white",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
box(lwd = 2)
m <- 10000
n <- 2
mu <- 0
sigma <- 1
ex <- 0
sv <- sqrt(1/n)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rnorm(n, mu, sigma))
}
a <- min(x_bar) - 0.1
b <- max(x_bar) + 0.1
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
box(lwd = 2)
m <- 10000
n <- 2
mu <- 0
sigma <- 1
ex <- 0
sv <- sqrt(1/n)
x_bar <- rep(NA, m)
for(t in 1:m){
x_bar[t] <- mean(rnorm(n, mu, sigma))
}
a <- min(x_bar) - 0.1
b <- max(x_bar) + 0.1
hist(x_bar, main = "", border = "gray",
breaks  = seq(a, b, length.out = 20),
probability = TRUE, xlim = c(a, b))
xx <- seq(a, b, length.out = 1000)
yy <- dnorm(xx, ex, sv)
lines(xx, yy, col = "red", lwd = 2)
box(lwd = 2)
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
clear
clear()
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
x_bar <- mean(x)
p
x_bar
mean(x)
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
n <- 10
p <- 0.1
x <- rbinom(n, 1, p)
x
x_bar <- mean(x)
xp <- seq(0, 1, length.out = 1000)
a <- 1
b <- 1
yp <- dbeta(xp, a, b)
s_x <- sum(x)
a_star <- a + s_x
b_star <- n - s_x + b
ypost <- dbeta(xp, a_star, b_star)
ypost
ymax <- max(yp, ypost)*1.1
plot(xp, yp, type = "l", lwd = 2, col = "black",
xlim = c(-0.05, 1.05), ylim = c(0, ymax))
abline(v = c(0, 1, p), lwd = 2, lty = 2,
col = c("lightgray", "lightgray", "red"))
lines(xp, ypost, lwd = 2, col = "blue")
lines(xp, ypost, lwd = 2, col = "blue")
exp <- a_star /(a_star + b_star)
abline(v = c(x_bar, exp), lwd = 2, lty = 2,
col = c("black", "green"))
ymax <- max(yp, ypost)*1.1
plot(xp, yp, type = "l", lwd = 2, col = "black",
xlim = c(-0.05, 1.05), ylim = c(0, ymax))
abline(v = c(0, 1, p), lwd = 2, lty = 2,
col = c("lightgray", "lightgray", "red"))
# Posterior
lines(xp, ypost, lwd = 2, col = "blue")
exp <- a_star /(a_star + b_star)
abline(v = c(x_bar, exp), lwd = 2, lty = 2,
col = c("black", "green"))
ymax <- max(yp, ypost)*1.1
plot(xp, yp, type = "l", lwd = 2, col = "black",
xlim = c(-0.05, 1.05), ylim = c(0, ymax))
abline(v = c(0, 1, p), lwd = 2, lty = 2,
col = c("lightgray", "lightgray", "red"))
# Posterior
lines(xp, ypost, lwd = 2, col = "blue")
expx <- a_star /(a_star + b_star)
abline(v = c(x_bar, expx), lwd = 2, lty = 2,
col = c("black", "green")
ymax <- max(yp, ypost)*1.1
plot(xp, yp, type = "l", lwd = 2, col = "black",
xlim = c(-0.05, 1.05), ylim = c(0, ymax))
abline(v = c(0, 1, p), lwd = 2, lty = 2,
col = c("lightgray", "lightgray", "red"))
# Posterior
lines(xp, ypost, lwd = 2, col = "blue")
expx <- a_star /(a_star + b_star)
abline(v = c(x_bar, expx), lwd = 2, lty = 2,
col = c("black", "green"))
ymax <- max(yp, ypost)*1.1
plot(xp, yp, type = "l", lwd = 2, col = "black",
xlim = c(-0.05, 1.05), ylim = c(0, ymax))
abline(v = c(0, 1, p), lwd = 2, lty = 2,
col = c("lightgray", "lightgray", "red"))
# Posterior
lines(xp, ypost, lwd = 2, col = "blue")
expx <- a_star /(a_star + b_star)
abline(v = c(x_bar, expx), lwd = 2, lty = 2,
col = c("black", "green"))
abline(v = c(0, 1, p), lwd = 2, lty = 2,
col = c("lightgray", "lightgray", "red"))
moda_p <- (a_star -1) /(a_star + b_star - 2)
medi_p <- qbeta(0.5)
moda_p <- (a_star -1) /(a_star + b_star - 2)
moda_p
medi_p <- qbeta(0.5, a_star, b_star)
medi_p
a <- 1
b <- 4
yp <- dbeta(xp, a, b)
s_x <- sum(x)
a_star <- a + s_x
b_star <- n - s_x + b
ypost <- dbeta(xp, a_star, b_star)
ymax <- max(yp, ypost)*1.1
plot(xp, yp, type = "l", lwd = 2, col = "black",
xlim = c(-0.05, 1.05), ylim = c(0, ymax))
abline(v = c(0, 1, p), lwd = 2, lty = 2,
col = c("lightgray", "lightgray", "red"))
lines(xp, ypost, lwd = 2, col = "blue")
expx <- a_star /(a_star + b_star)
abline(v = c(x_bar, expx), lwd = 2, lty = 2,
col = c("black", "green"))
moda_p <- (a_star -1) /(a_star + b_star - 2)
medi_p <- qbeta(0.5, a_star, b_star)
# y, ¿ya? intervalo de credibilidad para - p - del 0.95
ip <- qbeta(c(0.025, 0.975), a_star, b_star)
abline(v = ip, lwd = 2, lty = 2,
col = "purple")
library(fitdistrplus)
library(plotly)
library(fitdistrplus)
library(plotly)
n <- 100
x <- rgamma(n, 2, 6)
n <- 100
x <- rgamma(n, 2, 6)
log_like_gamma <- function(s_logx, s_x, a, bx){
n*a*log(b) - n*lgamma(a) + (a-1)*s_logx - b*s_x
}
s_x <- sum(x)
s_logx <- sum(log(x))
k <- 500
ax <- seq(0.01, 8, length.out = k)
by <-  seq(0.01, 8, length.out = k)
log_like <- array(NA, c(k, k))
for(i in 1:k){
for(j in 1:k){
log_like[i,j] <- log_like_gamma(s_logx, s_x, ax[i], by[j])
}
}
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
y <- list(
title = "a",
titlefont = f
)
x <- list(
title = "b",
titlefont = f
)
plot_ly(x = ax,
y = by,
z = log_like,
type = "contour") %>% layout(xaxis = x, yaxis = y)
n <- 100
x <- rgamma(n, 2, 6)
log_like_gamma <- function(s_logx, s_x, a, bx){
n*a*log(b) - n*lgamma(a) + (a-1)*s_logx - b*s_x
}
s_x <- sum(x)
s_logx <- sum(log(x))
k <- 500
ax <- seq(0.01, 8, length.out = k)
by <-  seq(0.01, 8, length.out = k)
log_like <- array(NA, c(k, k))
for(i in 1:k){
for(j in 1:k){
log_like[i,j] <- log_like_gamma(s_logx, s_x, ax[i], by[j])
}
}
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
yy <- list(
title = "a",
titlefont = f
)
xx <- list(
title = "b",
titlefont = f
)
plot_ly(x = ax,
y = by,
z = log_like,
type = "contour") %>% layout(xaxis = xx, yaxis = yy)
est_par <- mledist(x, "gamma",
start = list(shape = 1, rate = 1))
est_par$estimate
a
b
n <- 100
x <- rbeta(n, 2, 2)
est_par <- mledist(x, "beta",
start = list(shape1 = 1, shape2 = 1))
est_par$estimate
n <- 100
x <- rcauchy(n, 10, 0.5)
est_par <- mledist(x, "cauchy",
start = list(location = 0, scale = 1))
est_par$estimate
